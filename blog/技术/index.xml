<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技术 on 枫叶的博客 ʕ•ᴥ•ʔ</title><link>https://pjye.github.io/blog/%E6%8A%80%E6%9C%AF/</link><description>Recent content in 技术 on 枫叶的博客 ʕ•ᴥ•ʔ</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>Copyright © 2020, 枫叶</copyright><lastBuildDate>Sat, 04 Nov 2023 10:04:19 +0800</lastBuildDate><atom:link href="https://pjye.github.io/blog/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml"/><item><title>Unix哲学</title><link>https://pjye.github.io/unix%E5%93%B2%E5%AD%A6/</link><pubDate>Sat, 04 Nov 2023 10:04:19 +0800</pubDate><guid>https://pjye.github.io/unix%E5%93%B2%E5%AD%A6/</guid><description>摘自《UNIX编程艺术》：
Unix哲学中更多的内容不是这些先哲们口头表述出来的，而是由他们所作的一切和Unix本身所作出的榜样体现出来的。从整体上来说，可以概括为以下几点：
模块原则：使用简洁的接口拼合简单的部件。 清晰原则：清晰胜于机巧。 组合原则：设计时考虑拼接组合。 分离原则：策略同机制分离，接口同引擎分离。 简洁原则：设计要简洁，复杂度能低则低。 吝啬原则：除非确无它法，不要编写庞大的程序。 透明性原则：设计要可见，以便审查和调试。 健壮原则：健壮源于透明与简洁。 表示原则：把知识叠入数据以求逻辑质朴而健壮。 通俗原则：接口设计避免标新立异。 缄默原则：如果一个程序没什么好说的，就沉默。 补救原则：出现异常时，马上退出并给出足够错误信息。 经济原则：宁花机器一分，不花程序员一秒。 生成原则：避免手工hack，尽量编写程序去生成程序。 优化原则：雕琢前先要有原型，跑之前先学会走。 多样原则：决不相信所谓“不二法门”的断言。 扩展原则：设计着眼未来，未来总比预想来得快。</description></item></channel></rss>